// middleware.ts - Root level for Next.js 14 App Router\nimport { NextResponse } from \"next/server\";\nimport type { NextRequest } from \"next/server\";\n\n// Custom middleware that allows public access to login page\nexport async function middleware(request: NextRequest) {\n  // Allow access to the root page (login page) and auth error page without authentication\n  if (request.nextUrl.pathname === \"/\" || request.nextUrl.pathname === \"/auth/error\") {\n    return NextResponse.next();\n  }\n\n  // For all other routes, we'll check if the user has a session in the client-side\n  // since server-side session checking requires additional setup\n  // For now, let the client-side logic handle authentication checks\n  return NextResponse.next();\n}\n\n// Configure matcher to run middleware on all routes except static assets\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - api (API routes)\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - static (static files)\n     */\n    \"/((?!api|_next/static|_next/image|favicon.ico|static|.*\\\\..*|_vercel).*)\",\n  ],\n};